= Input
== Mouse
The input events are recieved though *GetMsg* with 2 arguemnts and some message type(s).+(The message types are provided by *1<</msg/*)+ With mouse events they come as the /x/,/y/ of the mouse in the window
 I64 x,y;
 U0 DrawIt(CTask *t,CDC *dc) {
 	dc->color=RED;
  	GrRect(dc,x,y,100,100);
 }
 U0 Run() {
 	Fs->draw_it=&DrawIt;
 	I64 m,x2,y2;
 	while(TRUE) {
 		m=GetMsg(&x2,&y2,1<<MSG_MS_MOVE+1<<MSG_MS_R_DOWN);
 		if(m==MSG_MS_R_DOWN)
 			break;
 		x=x2;
 		y=y2;
 		Refresh;
 	}
 }
 Run;
[mouse.gif]
(Press /Ctrl!+Alt!+X/ to quit)
== Keys 
Keys in TempleOS are the stuff you want to get the input of probaly.
To do this,we use ScanKey(&ch,&sc)
Let's see an example
 I64 x,y;
 U0 DrawIt(CTask*,CDC*dc) {
  	dc->color=GREEN;
  	GrRect(dc,x,y,100,100); 
 }
 U0 Run() {
 	Fs->draw_it=&DrawIt;
 	I64 msg,sc,ch;
 	for(;TRUE;) {
 		if(ScanKey(&ch,&sc)) {
 			if(sc&0xff==SC_ESC) break;
 			if(sc&0xff==SC_CURSOR_UP) {
 				y-=3;
 			} else if(sc&0xff==SC_CURSOR_DOWN) {
 				y+=3;
 			} else if(sc&0xff==SC_CURSOR_LEFT) {
 				x-=3;
 			} else if(sc&0xff==SC_CURSOR_RIGHT) {
 				x+=3;
 			}
 		} else {
 			Refresh;
 		}
 	}
  }
  Run;
[key_events.gif]

Now we have a cute sqaure running around with our arrow keys.
But's whats the thing with the 0xff. 0xff is 8bits in hex,we want the first 8 bits of the scancode.
Scancodes are divided into the scancode(first 8bits),and the flags(the rest of the bits).
|Byte|Meaning
|0|Scancode (SC_ESC,SC_CURSOR_LEFT)
|1 through 3| Flags
|4 | Repeat of byte 0
|5 through 7| Repeat of bytes 1-3
What are the flags? They tell us some of the modifier keys of the scancode.
Let's take a look at the flags.
|Flag|Meaning
|SCF_KEY_UP| The key is being released
|SCF_SHIFT|The shift key is down.
|SCF__CTRL| The control key is down.
|SCF_ALT| The alt key is down.
|SCF_CAPS| The caps key is active.
|SCF_NUM| The numlock key is active.
|SCf_SCROLL| The scrolllock key is active
|SCF_MS_L_DOWN| Mouse left button is down.
|SCF_MS_R_DOWN| Mouse left button is down.
|SCF_NO_SHIFT| Shift is not active.

Here are the scancode meanings:
|Scancode|Meaning
|SC_ESC | Escape
|SC_BACKSPACE |Backspace
|SC_TAB|Tab
|SC_ENTER|Return
|SC_SHIFT|Shift
|SC_CTRL|Ctrl
| SC_ALT|Alt
| SC_CAPS|Caps
| SC_NUM|Num
| SC_SCROLL|Scroll
| SC_CURSOR_UP|Up
| SC_CURSOR_DOWN|Down
| SC_CURSOR_LEFT|Left
| SC_CURSOR_RIGHT|Right
| SC_PAGE_UP|Page up
| SC_PAGE_DOWN|Page down
| SC_HOME|Home
| SC_END|End
| SC_INS|Insert
| SC_DELETE|Delete
| SC_F1| F1
|SC_F2|F2
| SC_F3|F3
|SC_F4|F4
|SC_F5|F5
|SC_F6|F6
|SC_F7|F7
|SC_F8|F8
|SC_F9|F9
|SC_F10|F10
|SC_F11|F11
|SC_F12|F12
|SC_PAUSE|Pause
|SC_GUI|Logo key
|SC_PRTSCRN1|Print screen 1
|SC_PRTSCRN2|Print screen 2
Let's look at an example of getting scan code flags
 I64 x,y;
 I64 color=GREEN;
 U0 DrawIt(CTask*,CDC*dc) {
  	dc->color=color;
  	GrRect(dc,x,y,100,100);
  	dc->color=RED;
 }
  U0 Run() {
 	Fs->draw_it=&DrawIt;
 	I64 msg,sc,ch;
 	for(;TRUE;) {
 		if(ScanMsg(&ch,&sc,1<<MSG_KEY_UP|1<<MSG_KEY_DOWN)) {
 			if(sc.u8[0]==SC_ESC) break;
 			if(sc.u8[0]==SC_CURSOR_UP) {
 				y-=3;
 			} else if(sc.u8[0]==SC_CURSOR_DOWN) {
 				y+=3;
 			} else if(sc.u8[0]==SC_CURSOR_LEFT) {
 				x-=3;
 			} else if(sc.u8[0]==SC_CURSOR_RIGHT) {
 				x+=3;
 			}
 			if(sc&SCF_CTRL)
 				color=RED;
 			else if(sc&SCF_SHIFT)
 				color=YELLOW;
 			else
 				color=GREEN;
 		} else {
 			Refresh;
 		}
 	}
 }
 Run;
Here we and with the scancode to test the bits of a flag.
We also used *ScanMsg* to look for the KEY_UP too. ScanMsg,scans for certian types of messages(like keyboard and mouse events).
instead of *GetMsg* does the same except it waits for an event.
== Keyboard Scancode table
TempleOS has a *kbd.down_bitmap* which has a list of down keys,it's usefull for detecting multiple keys down at once
 I64 x,y;
 U0 DrawIt(CTask*,CDC*dc) {
   dc->color=GREEN;
   GrRect(dc,x,y,100,100); 
 }
 U0 Run() {
   Fs->draw_it=&DrawIt;
   I64 msg,sc,ch;
   for(;TRUE;) {
     if(Bt(kbd.down_bitmap,SC_ESC)) break;
     if(Bt(kbd.down_bitmap,SC_CURSOR_UP)) y-=3;
     if(Bt(kbd.down_bitmap,SC_CURSOR_DOWN)) y+=3;
     if(Bt(kbd.down_bitmap,SC_CURSOR_LEFT)) x-=3;
     if(Bt(kbd.down_bitmap,SC_CURSOR_RIGHT)) x+=3;
     Refresh;
   }
 }
 Run;

== GetMsg/ScanMsg Reference
In TempleOS,most of the time you do user input,you want to look for messages. You can wait for a message to come with *GetMsg*,or if you are impatient you can check if one is avaible with *ScanMsg*(it will return *TRUE* if one is found and *FALSE* if none is available). So without further ado,here is a list of message codes. +When scanning for messages,be sure to *Yield* or *Refresh* to avoid freezing.+
|Message|Meaning
|MSG_KEY_DOWN| Returns char and scancode
|MSG_KEY_UP|Returns char and scancode  
|MSG_MS_MOVE|(x,y) coordnate in window
|MSG_MS_L_DOWN|(x,y) coordnate in window  
|MSG_MS_L_UP(x,y) coordnate in window  
|MSG_MS_L_D_DOWN|Double click,(x,y) coordnate in window  
|MSG_MS_L_D_UP|Double click,(x,y) coordnate in window  
|MSG_MS_R_DOWN|(x,y) coordnate in window  
|MSG_MS_R_UP(x,y) coordnate in window  
|MSG_MS_R_D_DOWN|Double click,(x,y) coordnate in window  
|MSG_MS_R_D_UP|Double click,(x,y) coordnate in window  
